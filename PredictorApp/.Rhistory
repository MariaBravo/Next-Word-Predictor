library(shinyapps)
devtools::install_github('rstudio/shinyapps')
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='mbravo', token='2B1054F8513CF748E72513EB4DF61084', secret='SXFz0YRxaIYnlqv3HEsjflAa0Ft/eaUubm+M+YpV')
library(shiny)
install.packages("shiny")
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tn1 <- read.table("T1grams.txt")
setnames(tn1, c("V1", "V2"), c("gram1", "freq"))
tn1 <- data.table(tn1)
setkey(tn1, gram1)
tn2 <- read.table("T2grams.txt")
setnames(tn2, c("V1", "V2", "V3"), c("gram1", "gram2", "freq"))
tn2 <- data.table(tn2)
setkey(tn2, gram1)
tn3 <- read.table("T3grams.txt")
setnames(tn3, c("V1", "V2", "V3", "V4"), c("gram1", "gram2", "gram3", "freq"))
tn3 <- data.table(tn3)
setkey(tn3, gram1,gram2)
tn4 <- read.table("T4grams.txt")
setnames(tn4, c("V1", "V2", "V3", "V4", "V5"), c("gram1", "gram2", "gram3", "gram4","freq"))
tn4 <- data.table(tn4)
setkey(tn4, gram1,gram2,gram3)
tn5 <- read.table("T5grams.txt")
setnames(tn5, c("V1", "V2", "V3", "V4", "V5", "V6"), c("gram1", "gram2", "gram3", "gram4", "gram5", "freq"))
tn5 <- data.table(tn5)
setkey(tn5, gram1,gram2,gram3,gram4)
save.image("~/Desktop/Coursera/PredictorApp/preds.RData")
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
s <- "ssssssssssss"
nchar(s)
nchar(s) - 10
s[nchar(s) - 10:nchar(s)]
s[(nchar(s)-10):nchar(s)]
s <- c(colors[1:20])
s <- colors[1:20]
s <- colors(1:20)
colors
colors()
colors()[1:20]
s <- colors()[1:20]
s[nchar(s) - 10:nchar(s)]
s[(nchar(s) - 10):nchar(s)]
nchar(s)
nchar(s) - 10
nchar(s)
length(s)
s[(length(s) - 10):length(s)]
s[(length(s) - 11):length(s)]
s[(length(s) - 9):length(s)]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
vTemp <- replicate(10, "")
vTemp <- c( "i" ,"would","like","to","earn","more","rewards","and","more","science")
vTemp[10] <- ""
vTemp
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinyapps)
deployApp()
install.packages("shiny")
library(shinyapps)
deployApp()
devtools::install_github("rstudio/shinyapps")
library(shinyapps)
deployApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinyapps)
deployApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
t <- read.table("~/Desktop/Coursera/Cleaned/T5afterSpell.txt")
t <- read.table("~/Desktop/Coursera/PredictorApp/T1grams.txt")
head(t)
head(t[order(V2, decreasing = TRUE),])
head(t[order(t$V2, decreasing = TRUE),])
t[, sum(t$V2)])
t[, sum(t$V2)]
sum(t$V2)
n <- sum(t$V2)
2302992/n
(2302992/n) * 100
- Build n-grams tables over cleaned text files and execute searches into the weighted frequencies of grams.
